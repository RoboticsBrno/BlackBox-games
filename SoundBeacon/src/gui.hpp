// clang-format off

// AUTOGENERATED FILE, DO NOT EDIT
// Generated by https://roboticsbrno.github.io/Esp32-RBGridUI-Designer/
// Layout: {"cols":12,"rows":18,"enableSplitting":true,"widgets":[{"uuid":51728,"type":"Slider","state":{"id":"Slider1","x":2,"y":2,"w":8,"h":2,"tab":0,"css":{},"color":"#008000","fontSize":16,"min":0,"max":10000,"value":0,"precision":1,"showValue":true}},{"uuid":17586,"type":"Slider","state":{"id":"Slider2","x":2,"y":6,"w":8,"h":2,"tab":0,"css":{},"color":"#008000","fontSize":16,"min":0,"max":256000,"value":0,"precision":1,"showValue":true}},{"uuid":55278,"type":"Slider","state":{"id":"Slider3","x":2,"y":10,"w":8,"h":2,"tab":0,"css":{},"color":"#008000","fontSize":16,"min":0,"max":1024,"value":0,"precision":1,"showValue":true}},{"uuid":343,"type":"Button","state":{"id":"Button1","x":2,"y":14,"w":8,"h":2,"tab":0,"css":{},"text":"OFF","fontSize":12,"color":"#000000","background":"","align":"center","valign":"center","disabled":false}},{"uuid":56200,"type":"Text","state":{"id":"Text1","x":4,"y":9,"w":4,"h":1,"tab":0,"css":{},"text":"decay","fontSize":12,"color":"#000000","background":"","align":"center","valign":"center","prefix":"","suffix":""}},{"uuid":27567,"type":"Text","state":{"id":"Text2","x":4,"y":5,"w":4,"h":1,"tab":0,"css":{},"text":"max sum","fontSize":12,"color":"#000000","background":"","align":"center","valign":"center","prefix":"","suffix":""}},{"uuid":18414,"type":"Text","state":{"id":"Text3","x":4,"y":1,"w":4,"h":1,"tab":0,"css":{},"text":"trigger_val","fontSize":12,"color":"#000000","background":"","align":"center","valign":"center","prefix":"","suffix":""}}]}

// Usage: include this file, where needed, and in *one* .cpp file,
// define also GRIDUI_LAYOUT_DEFINITION just before the layout like this:
//
//    #define GRIDUI_LAYOUT_DEFINITION
//    #include "layout.h"
//    using namespace gridui;
//
// The layout.h should also be the last included header. Then, in your code:
//
//    auto builder = Layout.begin();
//    builder.Button1.onPress([](Button&) { ... })
//    ...
//    builder.commit();

#pragma once

#include <esp_log.h>
#include "gridui.h"

namespace gridui {

#ifndef RB_GRIDUI_VERSION
#define RB_GRIDUI_VERSION 0x040000
#endif

static_assert(RB_GRIDUI_VERSION >= 0x040000,
    "Your RBGridUi library version is too low for this layout, please update to 040000.");

class _Layout;

namespace builder {
class _LayoutBuilder {
    friend class gridui::_Layout;

    _LayoutBuilder() :
        Slider1(
            UI.slider(2, 2, 8, 2, 51728)
                .max(10000)
        ),
        Slider2(
            UI.slider(2, 6, 8, 2, 17586)
                .max(256000)
        ),
        Slider3(
            UI.slider(2, 10, 8, 2, 55278)
                .max(1024)
        ),
        Button1(
            UI.button(2, 14, 8, 2, 343)
                .text("OFF")
        ),
        Text1(
            UI.text(4, 9, 4, 1, 56200)
                .text("decay")
        ),
        Text2(
            UI.text(4, 5, 4, 1, 27567)
                .text("max sum")
        ),
        Text3(
            UI.text(4, 1, 4, 1, 18414)
                .text("trigger_val")
        )
    {
    }

public:
    void commit();

    Slider& Slider1;
    Slider& Slider2;
    Slider& Slider3;
    Button& Button1;
    Text& Text1;
    Text& Text2;
    Text& Text3;
};

}; // namespace builder

class _Layout {
    friend class builder::_LayoutBuilder;
public:
    _Layout() {}

    builder::_LayoutBuilder begin() {
        static bool called = false;
        if(called) {
            ESP_LOGE("GridUILayout", "Layout.begin() was called more than once, this is an error!");
        }
        called = true;
        return builder::_LayoutBuilder();
    }

    void changeTab (uint16_t index) {
        UI.changeTab(index);
    }

    Slider Slider1;
    Slider Slider2;
    Slider Slider3;
    Button Button1;
    Text Text1;
    Text Text2;
    Text Text3;
};

extern _Layout Layout;
#ifdef GRIDUI_LAYOUT_DEFINITION
_Layout Layout;
#endif

namespace builder {

void _LayoutBuilder::commit() {
    Layout.Slider1 = Slider1.finish();
    Layout.Slider2 = Slider2.finish();
    Layout.Slider3 = Slider3.finish();
    Layout.Button1 = Button1.finish();
    Layout.Text1 = Text1.finish();
    Layout.Text2 = Text2.finish();
    Layout.Text3 = Text3.finish();
    UI.commit();
}

};

};
